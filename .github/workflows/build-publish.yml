name: Build and Publish

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}
  IMAGE_NAME: ${{ github.repository }}
  CHART_DIR: charts/nodejs-api
  PACKAGE_DIR: .helm-packages

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Tag with git tag (semver) like v1.2.3 -> 1.2.3, 1.2, 1
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # Tag branch heads (e.g., main -> latest)
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            # Always add short SHA
            type=sha

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
  helm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Helm lint
        run: helm lint "${CHART_DIR}"

      - name: Build chart dependencies (if any)
        run: helm dependency build "${CHART_DIR}"

      - name: Package chart
        run: |
          mkdir -p "${PACKAGE_DIR}"
          helm package "${CHART_DIR}" --destination "${PACKAGE_DIR}"

      - name: Login to GHCR
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
          helm registry login ${{ env.REGISTRY }} \
            --username "${{ github.actor }}" \
            --password-stdin

      - name: Push chart to GHCR
        run: |
          for pkg in ${PACKAGE_DIR}/*.tgz; do
            echo "Pushing $pkg"
            helm push "$pkg" "oci://${{ env.REGISTRY }}/${{ env.OWNER }}"
          done
